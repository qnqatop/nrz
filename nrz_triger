# CREATE TABLE `change_logs` (
#     id INT AUTO_INCREMENT PRIMARY KEY,
#     trigger_name VARCHAR(255) NOT NULL,
#     table_name VARCHAR(255) NOT NULL,
#     record_id INT NULL,
#     is_synced BOOLEAN DEFAULT FALSE,
#     event_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
# );

DELIMITER $$

CREATE TRIGGER after_user_insert
AFTER INSERT
ON users
FOR EACH ROW
BEGIN
    INSERT INTO `change_logs` (trigger_name, table_name, record_id, is_synced)
    VALUES ('after_user_insert', 'users', NEW.id, FALSE);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_subscription_insert
AFTER INSERT
ON applications
FOR EACH ROW
BEGIN
    INSERT INTO `change_logs` (trigger_name, table_name, record_id, is_synced)
    VALUES ('after_subscriptions_insert', 'subscriptions', NEW.id, FALSE);
END$$

DELIMITER ;


DELIMITER //

CREATE TRIGGER before_update_subscriptions
BEFORE UPDATE ON applications
FOR EACH ROW
BEGIN
    IF OLD.old_id = NEW.old_id THEN
        INSERT INTO `change_logs` (trigger_name, table_name, record_id, is_synced)
        VALUES ('before_update_subscriptions', 'subscriptions', NEW.id, FALSE);
    END IF;
END //

DELIMITER ;



DELIMITER //

CREATE TRIGGER before_update_users
BEFORE UPDATE ON users
FOR EACH ROW
BEGIN
    IF OLD.old_id = NEW.old_id THEN
        INSERT INTO `change_logs` (trigger_name, table_name, record_id, is_synced)
        VALUES ('before_update_users', 'users', NEW.id, FALSE);
    END IF;
END //

DELIMITER ;


    '''
    CREATE USER 'all'@'%' IDENTIFIED BY 'webant';

    GRANT ALL PRIVILEGES ON *.* TO 'all'@'%' WITH GRANT OPTION;

    FLUSH PRIVILEGES;
    '''


